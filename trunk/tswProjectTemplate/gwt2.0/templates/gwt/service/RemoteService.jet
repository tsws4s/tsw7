<%@ jet 
package="com.skyway.integration.google.webtoolkit.deploy.templates" 
class="RemoteServiceTemplate" 
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="swgwt" id="com.skyway.integration.google.webtoolkit.common.skywayGWTCodeGenTags"%>


package <sw:package select="$model" alias="gwtservice" var="pkg"/>;
<java:importsLocation package="{$pkg}"/>
<java:impliedImport name="{$fullyQualifiedClassName}"/>

/**
 * Remote Service for CRUD based operations for <sw:javaType select="$model" package="false"/>
 * @see <sw:javaType select="$model" package="true"/>
<sw:generated />
 */
public interface <sw:javaType select="$model" alias="gwtservice" package="false"/> extends <java:import>com.google.gwt.user.client.rpc.RemoteService</java:import> {

	/**
	 * Utility class for simplifying access to the instance of async service.
<sw:generated />
	 */
	public static class Util {
		
		/**
<sw:generated />
		*/
		private static <sw:javaType select="$model" alias="gwtserviceasync" package="false"/> instance;
		
		/**
<sw:generated />
		*/
		public static <sw:javaType select="$model" alias="gwtserviceasync" package="false"/> getInstance(){
			if (instance == null) {
				instance = (<sw:javaType select="$model" alias="gwtserviceasync" package="false"/>) <java:import>com.google.gwt.core.client.GWT</java:import>.create(<sw:javaType select="$model" alias="gwtservice" package="false"/>.class);
				ServiceDefTarget target = (<java:import>com.google.gwt.user.client.rpc.ServiceDefTarget</java:import>) instance;
				target.setServiceEntryPoint("<swgwt:moduleRelativeURLPrefix select="$model"/>/<sw:package select="$model" alias="gwtdatatypemodule"/>.<sw:javaType select="$model"/>/<sw:javaType select="$model" alias="gwtdatatype" package="false"/>");
			}
			return instance;
		}
		
		/**
		 * Utility method to get a relative url that gets us back to the context root so that the automatically
		 * generated web.xml mappings for the Service Modules can be rooted independently of the other Modules that might
		 * use them. 
<sw:generated />
		 */
		private static String getWebContextRootURL () { 
			String moduleURL = GWT.getModuleBaseURL();
			
			return moduleURL + "..";
		}
	}
	
	/**
	*
	<sw:generated />
	*/
	public <T extends <java:import><sw:javaType select="$model/project" alias="gwtresponse" package="true"/></java:import>> T execute (<java:import><sw:javaType select="$model/project" alias="gwtaction" package="true"/></java:import><T> action) throws <java:import><sw:javaType select="$model/project" alias="gwtcrudexception" package="true"/></java:import>;
}