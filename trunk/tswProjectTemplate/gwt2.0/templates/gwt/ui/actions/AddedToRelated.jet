<%@ jet 
package="com.skyway.integration.google.webtoolkit.deploy.templates" 
class="AddedToRelatedTemplate" 
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>


package <sw:package select="$model" alias="gwtaddedtorelated" var="pkg"/>;
<sw:javaType select="$model" package="true" var="fullyQualifiedClassName" emit="false"/>
<java:importsLocation package="{$pkg}"/>
<java:impliedImport name="{$fullyQualifiedClassName}"/>

<sw:getVariableName select="$model" uncapitalize="true" var="domainObjName" emit="false"/> <sw:getVariableName select="$model" uncapitalize="false" var="DomainObjName" emit="false"/>

/**
 * Callback handler for the <sw:javaType select="$model" alias="gwtaddtorelated" package="false"/> Action which is used to add <sw:javaType select="$model" package="false"/> to any other object it may be related too.
 * This command can be passed to the Remote Crud Service which has the command handlers for managing the relationships on the back end.
<sw:generated />
 */
public abstract class <sw:javaType select="$model" alias="gwtaddedtorelated" package="false"/> implements <java:import>com.google.gwt.user.client.rpc.AsyncCallback</java:import><<sw:javaType select="$model" alias="gwtaddtorelatedresponse" package="false"/>> {
	private static final long serialVersionUID = 1L;
	
	/**
	* Constructor
<sw:generated />
	*/
	public <sw:javaType select="$model" alias="gwtaddedtorelated" package="false"/>(){}

	/**
	* Handles Exceptions from the remote call, this method will push any exception on the the EventBus
<sw:generated />
	*/
	public void onFailure(Throwable failure) {
		try {
			throw failure;
		}
		catch (<java:import><sw:javaType select="$model/project" alias="gwtcrudexception" package="true"/></java:import> ae) {
			<java:import><sw:javaType select="$model/project" alias="gwteventbus" package="true"/></java:import>.get().fireEvent(new <java:import><sw:javaType select="$model/project" alias="gwtcrudexceptionevent" package="true"/></java:import>(ae));
		} catch (Throwable e) {
			<java:import><sw:javaType select="$model/project" alias="gwteventbus" package="true"/></java:import>.get().fireEvent(new <java:import><sw:javaType select="$model/project" alias="gwtcrudexceptionevent" package="true"/></java:import>(new <sw:javaType select="$model/project" alias="gwtcrudexception" package="false"/>(e)));
		}
	}

	/**
	* Async Callback Handler passes through to abstract override method
<sw:generated />
	*/
	public void onSuccess(<sw:javaType select="$model" alias="gwtaddtorelatedresponse" package="false"/> result) {
		added<c:get select="$DomainObjName"/>s();
	}
	
	/**
	* Extensions should override this method to handle results of the remote call
<sw:generated />
	*/
	public abstract void added<c:get select="$DomainObjName"/>s();
	
}
