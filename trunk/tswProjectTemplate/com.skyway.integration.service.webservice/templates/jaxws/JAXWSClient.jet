<%@ jet 
package="com.skyway.integration.service.webservice.jet.jaxws" 
class="JAXWSClientTemplate" 
%>

<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="jaxws" id="com.skyway.integration.service.webservice.skywayJAXWSTags"%>
<%@taglib prefix="swspr" id="org.skyway.integration.java.spring.skywaySpringCodeGenTags"%>
<swspr:springProjectVar select="$model/project" var="springProject" />

package <sw:package alias="wsclient" select="$model" var="pkg"/>;
<java:importsLocation package="{$pkg}"/>
<java:impliedImport name="{$fullyQualifiedClassName}"/>
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebEndpoint;

<jaxws:getWebService service="$model" var="webService" />

/**
<sw:documentation select="$model" format=" * " />
 <sw:generated />
 */
<jaxws:webServiceClient select="$webService" />
public class <jaxws:serviceClientName select="$model" /> extends <java:import>javax.xml.ws.Service</java:import> {
	/**
 	 <sw:generated />  
 	 */
	private static final String DEFAULT_PROTOCOL = "http";

	/**
 	 <sw:generated />  
 	 */
	private static final String DEFAULT_HOST = "localhost";

	/**
 	 <sw:generated />  
 	 */
    public final static URL WSDL_LOCATION; 
    
    /**
 	 <sw:generated />  
 	 */
    public final static <java:import>javax.xml.namespace.QName</java:import> SERVICE = new <java:import>javax.xml.namespace.QName</java:import>("<c:get select="$webService/targetNameSpace" />", "<c:get select="$webService/serviceName" />");
    
    /**
 	 <sw:generated />  
 	 */
    public final static <java:import>javax.xml.namespace.QName</java:import> <jaxws:serviceEndPointName select="$model"/> = new <java:import>javax.xml.namespace.QName</java:import>("<c:get select="$webService/targetNameSpace" />", "<c:get select="$webService/portName" />");
    
    /**
 	 <sw:generated />  
 	 */
    static {
		String urlText;
        <java:import>java.net.URL</java:import> url = null;
		urlText = "<c:get select="$webService/wsdlURL" />";
		if (urlText == null || urlText.length() == 0){
			urlText = getLocalUrlText();
		}
		
		try{
        	url = new <java:import>java.net.URL</java:import>(urlText);
        }catch(<java:import>java.net.MalformedURLException</java:import> e){
			e.printStackTrace();
        }
        
        WSDL_LOCATION = url;
    }

	/**
 	 <sw:generated />  
 	 */
	public static String getLocalUrlText() {
		StringBuilder urlText = new StringBuilder();
		
		urlText.append(getProtocol());
		urlText.append("://");
		urlText.append(getHostName());
		urlText.append(":<c:get select="$springProject/clusterSettings/@webServerPort" />/<sw:webContextRoot />/jaxws/<jaxws:serviceEndPointName select="$model"/>?wsdl");
		
		return urlText.toString();
	}
	
	/**
	 * Attempts to return the original WSDL if the Service was derived from an external WSDL
	 * Otherwise, will use the WSDL as it will be generated by the JAX-WS infrastructure
	 * @return
	 <sw:generated />
	 */
	protected static URL getDefaultWSDLURL() {
		try {
			return <jaxws:serviceClientName select="$model" />.class.getClassLoader().getResource("<jaxws:wsdlLocation select="$webService"/>");
		}
		catch (Exception e) {
			return WSDL_LOCATION;
		}
	}

	/**
 	 <sw:generated />  
 	 */
	public static String getProtocol(){
		return DEFAULT_PROTOCOL;
	}
	
	/**
 	 <sw:generated />  
 	 */
	public static String getHostName(){
		return DEFAULT_HOST;
	}

	/**
 	 <sw:generated />  
 	 */
    public <jaxws:serviceClientName select="$model" />(<java:import>java.net.URL</java:import> wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

	/**
 	 <sw:generated />  
 	 */
    public <jaxws:serviceClientName select="$model" />(<java:import>java.net.URL</java:import> wsdlLocation, <java:import>javax.xml.namespace.QName</java:import> serviceName) {
        super(wsdlLocation, serviceName);
    }

	/**
 	 <sw:generated />  
 	 */
    public <jaxws:serviceClientName select="$model" />() {
        super(getDefaultWSDLURL(), SERVICE);
    }

   /**
 	 <sw:generated />  
 	 */
   <jaxws:webEndPoint select="$webService" />
   
    public <java:import><jaxws:serviceEndPointName select="$model" package="true"/></java:import> getService() {
        return super.getPort(<jaxws:serviceEndPointName select="$model"/> , <jaxws:serviceEndPointName select="$model"/>.class);
    }

}
