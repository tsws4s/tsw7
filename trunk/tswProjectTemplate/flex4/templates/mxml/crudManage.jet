<%@ jet 
package="com.skyway.integration.service.flex.jet.mxml" 
class="CrudManageTemplate" 
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="swspr" id="org.skyway.integration.java.spring.skywaySpringCodeGenTags"%>
<%@taglib prefix="gen" id="com.skyway.scaffolding.crud.common.generationTags"%>
<?xml version="1.0" encoding="utf-8"?>
<!--
Manage<c:get select="$dataType/@name" />.mxml is the main flex page containing the grid and 
containers for the <c:get select="$dataType/@name" /> CRUD operations and relationships (if any)

Generated by MyEclipse for Spring Scaffolding
Adobe Flex 4.0

Any changes to this file need to be recompiled into the swf file
by running the <c:get select="$dataType/@name" />build.xml ant task. (If flex/flash builder 
isn't part of the IDE)
-->
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			xmlns:s="library://ns.adobe.com/flex/spark" 
			xmlns:mx="library://ns.adobe.com/flex/mx"
			width="100%" height="100%" minWidth="980"
			skinClass="assets.skins.CustomApplicationSkin"
			creationComplete="creationCompleteHandler()">
	
	<fx:Style source="/assets/css/flexStyles.css"/>
	
	<fx:Script>
		<![CDATA[
			import <sw:javaType select="$dataType" package="true" />;
			import <sw:javaType select="$dataType" package="true" />Event;
			import <c:get select="lower-case($dataType/@name)" />.mxml.<c:get select="$dataType/@name" />Form;

			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.events.ListEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;			
			import mx.rpc.remoting.Operation;
			import mx.rpc.remoting.RemoteObject;
			
			import assets.skins.CustomApplicationSkin;
			import assets.skins.CustomTabBarSkin;			
			
			[Bindable] 
			private var <c:get select="lowercaseFirst($dataType/@name)" />s:ArrayCollection;
			
			[Bindable] 
			public var baseURL:String;
			
			public var isNew<c:get select="$dataType/@name" />:Boolean = false;

			/** 
			* Calls the load<c:get select="$dataType/@name" />s remoting 
			* destination method upon initial swf load into the main grid
			*/ 
			private function creationCompleteHandler():void
			{
				var load<c:get select="$dataType/@name" />sOperation:Operation = new Operation();
				load<c:get select="$dataType/@name" />sOperation.name = "load<c:get select="$dataType/@name" />s";
				load<c:get select="$dataType/@name" />sOperation.addEventListener(ResultEvent.RESULT, load<c:get select="$dataType/@name" />sHandler)
				ro.operations = [load<c:get select="$dataType/@name" />sOperation];
				load<c:get select="$dataType/@name" />sOperation.send();							
			}
			
			/** 
			* Called after the remoting object method, ro.load<c:get select="$dataType/@name" /> 
			* is called to populate the grid array			
			*/
			private function load<c:get select="$dataType/@name" />sHandler(event:ResultEvent):void
			{
				<c:get select="lowercaseFirst($dataType/@name)" />s = event.result as ArrayCollection;
			}

			/** 
			* Default pop up indicating faults
			*/
			private function faultHandler(event:FaultEvent):void
			{
				Alert.show(event.fault.faultDetail);
			}
			
			/** 
			* Called when a <c:get select="$dataType/@name" /> is saved in the form mxml
			*/
			private function <c:get select="lowercaseFirst($dataType/@name)" />CreatedHandler(event:<c:get select="$dataType/@name" />Event):void
			{
				// Adds the <c:get select="$dataType/@name" /> to the client side array at the top, then selects it.
				<c:get select="lowercaseFirst($dataType/@name)" />s.addItemAt(event.<c:get select="lowercaseFirst($dataType/@name)" />Var,0);
				dg_<c:get select="$dataType/@name" />s.selectedIndex = 0;								
			}

			private function <c:get select="lowercaseFirst($dataType/@name)" />UpdatedHandler(event:<c:get select="$dataType/@name" />Event):void
			{
				var updated<c:get select="$dataType/@name" />Index:int = <c:get select="lowercaseFirst($dataType/@name)" />s.getItemIndex(event.<c:get select="lowercaseFirst($dataType/@name)" />Var);
				dg_<c:get select="$dataType/@name" />s.selectedIndex = updated<c:get select="$dataType/@name" />Index;				
			}

			/** 
			* Removes the tab and <c:get select="$dataType/@name" /> in the client side array
			*/
			private function <c:get select="lowercaseFirst($dataType/@name)" />DeletedHandler(event:<c:get select="$dataType/@name" />Event):void
			{
				vs_<c:get select="$dataType/@name" />.removeChild(event.target as <c:get select="$dataType/@name" />Form);
				var deleted<c:get select="$dataType/@name" />Index:int = <c:get select="lowercaseFirst($dataType/@name)" />s.getItemIndex(event.<c:get select="lowercaseFirst($dataType/@name)" />Var);
				dg_<c:get select="$dataType/@name" />s.selectedIndex = deleted<c:get select="$dataType/@name" />Index;
				<c:get select="lowercaseFirst($dataType/@name)" />s.removeItemAt(deleted<c:get select="$dataType/@name" />Index);
			}
			
			/** 
			* Called when an item is clicked in the data grid.
			*/
			private function dg_<c:get select="$dataType/@name" />sItemClicked(event:ListEvent, <c:get select="lowercaseFirst($dataType/@name)" />Input:<c:get select="$dataType/@name" />):void
			{			
				// If this is this the header row, do NOT open a tab.
				if(event.rowIndex>=0)
				{
					isNew<c:get select="$dataType/@name" /> = false;
					open<c:get select="$dataType/@name" />(<c:get select="lowercaseFirst($dataType/@name)" />Input);				
				}
			}			

			/** 
			* Opens a tab with the selected <c:get select="$dataType/@name" /> form and 
			* related children.
			*/
			private function open<c:get select="$dataType/@name" />(<c:get select="lowercaseFirst($dataType/@name)" />Input:<c:get select="$dataType/@name" />):void
			{
				var children:Array = vs_<c:get select="$dataType/@name" />.getChildren();
				for (var i:int = 0; i<children.length; i++)
				{
					<c:setVariable select="0" var="keyCount" />
					if (<c:iterate select="$dataType/fields" var="field"><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0"> && </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:get select="$dataType/@name" />Form(children[i]).<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> == <c:get select="lowercaseFirst($dataType/@name)" />Input.<c:get select="$field/@name" /></c:if></c:iterate>)
					{
						vs_<c:get select="$dataType/@name" />.selectedChild = children[i];
						return;
					}
				}
				
				// Creates a new instance of <c:get select="$dataType/@name" />Form.mxml to load into the tab
				var form:<c:get select="$dataType/@name" />Form = new <c:get select="$dataType/@name" />Form();
				form.addEventListener(<c:get select="$dataType/@name" />Event.<c:get select="upper-case($dataType/@name)" />_CREATED, <c:get select="lowercaseFirst($dataType/@name)" />CreatedHandler);
				form.addEventListener(<c:get select="$dataType/@name" />Event.<c:get select="upper-case($dataType/@name)" />_UPDATED, <c:get select="lowercaseFirst($dataType/@name)" />UpdatedHandler);
				form.addEventListener(<c:get select="$dataType/@name" />Event.<c:get select="upper-case($dataType/@name)" />_DELETED, <c:get select="lowercaseFirst($dataType/@name)" />DeletedHandler);
				<c:setVariable select="0" var="keyCount" />
				form.label = isNew<c:get select="$dataType/@name" /> ? "New <c:get select="$dataType/@name" />": <c:iterate select="$dataType/fields" var="field"><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0"> + " - " 
								+ </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:choose><c:when test="$field/dataType/@type = 'DATE' or $field/dataType/@type = 'TIME' or $field/dataType/@type = 'DATETIME'"><c:choose select="$field/dataType/@type"><c:when test="'DATE'">date</c:when><c:when test="'TIME'">time</c:when><c:when test="'DATETIME'">dateTime</c:when></c:choose>TypeFormatter.format(<c:get select="lowercaseFirst($dataType/@name)" />Input.<c:get select="$field/@name" />)</c:when><c:otherwise><c:get select="lowercaseFirst($dataType/@name)" />Input.<c:get select="$field/@name" />.toString()</c:otherwise></c:choose></c:if></c:iterate>;
				form.isNew<c:get select="$dataType/@name" /> = isNew<c:get select="$dataType/@name" />;
				form.ro = this.ro;
				vs_<c:get select="$dataType/@name" />.addChild(form);
				form.<c:get select="lowercaseFirst($dataType/@name)" />Var = <c:get select="lowercaseFirst($dataType/@name)" />Input;
				vs_<c:get select="$dataType/@name" />.selectedChild = form;
			}
			
			private function new<c:get select="$dataType/@name" />ButtonClicked(<c:get select="lowercaseFirst($dataType/@name)" />Input:<c:get select="$dataType/@name" />):void
			{
				isNew<c:get select="$dataType/@name" /> = true;			
				open<c:get select="$dataType/@name" />(<c:get select="lowercaseFirst($dataType/@name)" />Input);
			}
			
			<c:setVariable select="'false'" var="formatTime" />
			<c:setVariable select="'false'" var="formatDateTime" />
			<c:setVariable select="'false'" var="formatDate" />
			<c:iterate select="$dataType/fields" var="field">			
				<c:choose>
					<c:when test="$field/dataType/@type = 'DATE'">
						<c:setVariable select="'true'" var="formatDate" />
					</c:when>
					<c:when test="$field/dataType/@type = 'TIME'">
						<c:setVariable select="'true'" var="formatTime" />
					</c:when>
					<c:when test="$field/dataType/@type = 'DATETIME'">
						<c:setVariable select="'true'" var="formatDateTime" />
					</c:when>							
				</c:choose>
			</c:iterate>
			
			<c:if test="$formatTime = 'true'">
		 	private function timeLabelFormatter(item:Object, column:DataGridColumn):String
			{
				var value:Object = item[column.dataField];
				
				return timeTypeFormatter.format(value);
			}
			</c:if>	
			<c:if test="$formatDateTime = 'true'">
			private function dateTimeLabelFormatter(item:Object, column:DataGridColumn):String
			{
				var value:Object = item[column.dataField];
				
				return dateTimeTypeFormatter.format(value);
			}
			</c:if>			
			<c:if test="$formatDate = 'true'">
			private function dateLabelFormatter(item:Object, column:DataGridColumn):String
			{
				var value:Object = item[column.dataField];
				
				return dateTypeFormatter.format(value);
			}
			</c:if>
			
			/** 
			* Navigate back to the Context Root
			*/
			private function goBacktoDashboard():void
			{
				navigateToURL(new URLRequest(home.url),"_parent");
			}
			
			/** 
			* Fault handlers to the RemoteObject to catch the FaultEvent 
			* to pop up an Alert and notify the user of the issue.
			*/
			private function load<c:get select="$dataType/@name" />sFault(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString);
			}
			
			/** 
			* Generic catch all fault handler to the RemoteObject 
			* to pop up an Alert and notify the user of the issue.
			*/
			private function <c:get select="lowercaseFirst($dataType/@name)" />RemoteObjectFault(event:FaultEvent):void
			{
				Alert.show(event.fault.faultString);
			}

		]]>
	</fx:Script>
	
	<fx:Declarations>
	
		<s:HTTPService id="home" url="@ContextRoot()"/> 

		<s:RemoteObject id="ro" destination="<c:get select="$dataType/@name" />Service" fault="<c:get select="lowercaseFirst($dataType/@name)" />RemoteObjectFault(event)">
		</s:RemoteObject>
	
	<c:if test="$formatTime = 'true'">
		<mx:DateFormatter id="timeTypeFormatter" formatString="L:NN A" />
		
	</c:if>	
	<c:if test="$formatDateTime = 'true'">
		<mx:DateFormatter id="dateTimeTypeFormatter" formatString="MM/DD/YYYY L:NN A" />
		
	</c:if>	
	<c:if test="$formatDate = 'true'">
		<mx:DateFormatter id="dateTypeFormatter" formatString="MM/DD/YYYY" />
		
	</c:if>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout paddingLeft="10" paddingRight="10"/>
	</s:layout>	
	
	<s:HGroup width="100%" verticalAlign="middle">
		<s:Label text="Manage <c:get select="$dataType/@name" />s" styleName="pageTitle" width="100%"/>
		
		<s:Graphic x="93" y="38" 
				   buttonMode="true" 
				   mouseEnabledWhereTransparent="false" 
				   useHandCursor="true"				   
				   click="navigateToURL(new URLRequest('http://www.myeclipseide.com/spring.php'), 'MyEclipse for Spring')">
			<s:BitmapImage source="@Embed('assets/images/me4s_logo.png')" width="93" height="38" fillMode="scale" top="20"/>
		</s:Graphic>					
	</s:HGroup>
	
	<s:Line width="100%" />
	
	<s:HGroup>
		<s:Button styleName="new" label="New <c:get select="$dataType/@name" />" click="new<c:get select="$dataType/@name" />ButtonClicked(new <c:get select="$dataType/@name" />())"/>
		<s:Button styleName="back" label="Back to Dashboard" click="goBacktoDashboard()"/>
	</s:HGroup>
		
	<mx:DataGrid id="dg_<c:get select="$dataType/@name" />s" dataProvider="{<c:get select="lowercaseFirst($dataType/@name)" />s}" width="100%" height="300" minWidth="900"
			 verticalScrollPolicy="on" horizontalScrollPolicy="off"
			 itemClick="dg_<c:get select="$dataType/@name" />sItemClicked(event, dg_<c:get select="$dataType/@name" />s.selectedItem as <c:get select="$dataType/@name" />)">
		<mx:columns>
			<c:iterate select="$dataType/fields" var="field" >
				<gen:displayFieldInList select="$field" var="displayable" />
				<c:if test="$displayable">
				<c:choose>
					<c:when test="$field/dataType/@type = 'DATE'">
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" /> labelFunction="dateLabelFormatter"/>
					</c:when>
					<c:when test="$field/dataType/@type = 'TIME'">
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" /> labelFunction="timeLabelFormatter"/>
					</c:when>
					<c:when test="$field/dataType/@type = 'DATETIME'">
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" /> labelFunction="dateTimeLabelFormatter"/>
					</c:when>
					<c:otherwise>
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />"/>
					</c:otherwise>
				</c:choose>
				</c:if>
			</c:iterate>
		</mx:columns>
	</mx:DataGrid>
		
	<!-- Tab Bar containing edit form and related objects -->
	<s:TabBar id="<c:get select="lowercaseFirst($dataType/@name)" />Tabs" dataProvider="{vs_<c:get select="$dataType/@name" />}"/>
		<mx:ViewStack id="vs_<c:get select="$dataType/@name" />" width="100%" />	
	
	<!-- Adding spacer b/c some browser/os combos cut off the bottom-->
	<mx:Spacer height="15" />
</s:Application>
