<%@ jet 
package="com.skyway.integration.service.flex.jet.mxml" 
class="CrudFormTemplate"
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="swspr" id="org.skyway.integration.java.spring.skywaySpringCodeGenTags"%>
<%@taglib prefix="gen" id="com.skyway.scaffolding.crud.common.generationTags"%>
<?xml version="1.0" encoding="utf-8"?>
<!--
<c:get select="$dataType/@name" />Form.mxml is the flex form component supporting 
the <c:get select="$dataType/@name" /> create and update operations.

Generated by MyEclipse for Spring Scaffolding
Adobe Flex 3.5 

Any changes to this file need to be recompiled into the swf file
by running the <c:get select="$dataType/@name" />build.xml ant task. (If flex/flash builder 
isn't part of the IDE)
-->
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"	
	creationComplete="init()">	

	<mx:Metadata>
        [Event(name="<c:get select="lowercaseFirst($dataType/@name)" />Created", type="<c:get select="$dataType/@name" />Event")]
        [Event(name="<c:get select="lowercaseFirst($dataType/@name)" />Updated", type="<c:get select="$dataType/@name" />Event")]
        [Event(name="<c:get select="lowercaseFirst($dataType/@name)" />Deleted", type="<c:get select="$dataType/@name" />Event")]
    </mx:Metadata>
	
	<mx:Script>
		<![CDATA[
			
		import <sw:javaType select="$dataType" package="true" />;
		import <sw:javaType select="$dataType" package="true" />Event;
		<swflex:getDistinctRelationshipTypes select="$dataType" var="relationshipTypes" />
		<c:iterate select="$relationshipTypes" var="relationshipType">
		import <sw:javaType select="$relationshipType" package="true" emitCollectionPolicy="omit" />;
		import <sw:javaType select="$relationshipType" package="true" emitCollectionPolicy="omit" />Event;
		</c:iterate>

		import mx.collections.ArrayCollection;
		import mx.controls.Alert;
		import mx.events.CloseEvent;
		import mx.events.ValidationResultEvent;		
		import mx.rpc.events.FaultEvent;
		import mx.rpc.events.ResultEvent;			
		import mx.rpc.remoting.Operation;
		import mx.rpc.remoting.RemoteObject;		
		import mx.validators.Validator;
				
		[Bindable] 
		public var <c:get select="lowercaseFirst($dataType/@name)" />Var:<c:get select="$dataType/@name" />;
		
		[Bindable]
		public var isNew<c:get select="$dataType/@name" />:Boolean = false;
		
		public var ro:RemoteObject;
		
		[Bindable]
		private var <c:get select="lowercaseFirst($dataType/@name)" />FormValidators:Array;
		
		/** 
		* Runs on form load. Calls the show relationship function 
		* if the <c:get select="$dataType/@name" /> is not new.
		*/
		private function init():void
		{
			if(!isNew<c:get select="$dataType/@name" />)
			{
				show<c:get select="$dataType/@name" />Relationships();
				// Disable primary key fields in the form
				<c:iterate select="$dataType/fields" var="field">	
					<c:choose>
						<c:when test="$field/@primaryKey = 'true'">
				<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.enabled = false;
						</c:when>
					</c:choose>
				</c:iterate>
			}
			initValidators();
		}
		
		/** 
		* Shows <c:get select="$dataType/@name" />'s related objects in the 
		* Accordion canvas view
		*/
		private function show<c:get select="$dataType/@name" />Relationships():void
		{
		<c:iterate select="$dataType/relationships" var="relationship">
			<c:setVariable select="$relationship/targetDataType" var="relatedType" />
				<c:choose>
					<c:when test="string($relationship/@cardinality) = 'MANY'">			
			// Create the <c:get select="uppercaseFirst($relationship/@name)"/>Grid.mxml Grid instance supporting the One-to-Many relationship				
			var <c:get select="lowercaseFirst($relationship/@name)"/>GridVar:<c:get select="uppercaseFirst($relationship/@name)"/>Grid = new <c:get select="uppercaseFirst($relationship/@name)"/>Grid();				
			<c:get select="lowercaseFirst($dataType/@name)" /><c:get select="uppercaseFirst($relationship/@name)"/>Canvas.addChild(<c:get select="lowercaseFirst($relationship/@name)"/>GridVar);
			<c:get select="lowercaseFirst($relationship/@name)"/>GridVar.<c:get select="lowercaseFirst($dataType/@name)" />Var = <c:get select="lowercaseFirst($dataType/@name)" />Var;
			<c:get select="lowercaseFirst($dataType/@name)" /><c:get select="uppercaseFirst($relationship/@name)"/>Canvas.visible=true;
			<c:get select="lowercaseFirst($relationship/@name)"/>GridVar.ro = this.ro;
					
					</c:when>
					<c:otherwise>			
			// Create the <c:get select="uppercaseFirst($relationship/@name)"/>Form.mxml Form instance supporting the One-to-One relationship
			var <c:get select="lowercaseFirst($relationship/@name)"/>FormVar:<c:get select="uppercaseFirst($relationship/@name)"/>Form = new <c:get select="uppercaseFirst($relationship/@name)"/>Form();
			<c:get select="lowercaseFirst($dataType/@name)" /><c:get select="uppercaseFirst($relationship/@name)"/>Canvas.addChild(<c:get select="lowercaseFirst($relationship/@name)"/>FormVar);
			<c:get select="lowercaseFirst($relationship/@name)"/>FormVar.<c:get select="lowercaseFirst($dataType/@name)" />Var = <c:get select="lowercaseFirst($dataType/@name)" />Var;
			<c:get select="lowercaseFirst($dataType/@name)" /><c:get select="uppercaseFirst($relationship/@name)"/>Canvas.visible=true;
			<c:get select="lowercaseFirst($relationship/@name)"/>FormVar.ro = this.ro;
			
					</c:otherwise>
				</c:choose>
			</c:iterate>
		}		
		
		
		/** 
		* Save the <c:get select="$dataType/@name" />
		*/
		private function submit<c:get select="$dataType/@name" />Form():void
		{
			// Map the form values to the <c:get select="$dataType/@name" /> object
			<c:setVariable select="'false'" var="dateFormatter" />
			<c:setVariable select="'false'" var="timeFormatter" />
			<c:setVariable select="'false'" var="dateTimeFormatter" />	
			<c:iterate select="$dataType/fields" var="field">
				<gen:isFieldDisplayable select="$field" var="displayable" />	
				<c:if test="$displayable" >		
				<c:choose>
					<c:when test="$field/dataType/@type = 'BOOLEAN'">
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = <c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.selected;
					</c:when>
					<c:when test="$field/dataType/@type = 'INTEGER'">
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = parseInt(<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text);
					</c:when>
					<c:when test="$field/dataType/@type = 'DECIMAL'">
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = (<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text=='')?0:parseFloat(<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text);
					</c:when>
					<c:when test="$field/dataType/@type = 'DATE'">
						<c:setVariable select="'true'" var="dateFormatter" />
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = <c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.selectedDate;
					</c:when>					
					<c:when test="$field/dataType/@type = 'TIME'">
						<c:setVariable select="'true'" var="timeFormatter" />
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = (<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text=='')?null:new Date(Date.parse("1/1/1970 " + <c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text));
					</c:when>
					<c:when test="$field/dataType/@type = 'DATETIME'">
						<c:setVariable select="'true'" var="dateTimeFormatter" />
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = (<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text=='')?null:new Date(Date.parse(<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text));
					</c:when>
					<c:otherwise>
			<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /> = <c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />.text;
					</c:otherwise>						
				</c:choose>
				</c:if>
			</c:iterate>
			
			// Call the remoting object's save<c:get select="$dataType/@name" /> method
			var save<c:get select="$dataType/@name" />Operation:Operation = new Operation();
			save<c:get select="$dataType/@name" />Operation.name = "save<c:get select="$dataType/@name" />";
			save<c:get select="$dataType/@name" />Operation.arguments=[<c:get select="lowercaseFirst($dataType/@name)" />Var];
			ro.operations = [save<c:get select="$dataType/@name" />Operation];
			save<c:get select="$dataType/@name" />Operation.send();
			
			if(isNew<c:get select="$dataType/@name" />)
			{
				// If new, broadcast the CREATED which executes the <c:get select="lowercaseFirst($dataType/@name)" />CreatedHandler in the Manage<c:get select="$dataType/@name" />.mxml
				dispatchEvent(new <c:get select="$dataType/@name" />Event(<c:get select="$dataType/@name" />Event.<c:get select="upper-case($dataType/@name)" />_CREATED, <c:get select="lowercaseFirst($dataType/@name)" />Var));					
				show<c:get select="$dataType/@name" />Relationships()
				isNew<c:get select="$dataType/@name" /> = false;
				this.label = <c:setVariable select="0" var="keyCount" /><c:iterate select="$dataType/fields" var="field"><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0"> + " - " 
								+ </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:choose><c:when test="$field/dataType/@type = 'DATE' or $field/dataType/@type = 'TIME' or $field/dataType/@type = 'DATETIME'"><c:choose select="$field/dataType/@type"><c:when test="'DATE'">date</c:when><c:when test="'TIME'">time</c:when><c:when test="'DATETIME'">dateTime</c:when></c:choose>TypeFormatter.format(<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />)</c:when><c:otherwise><c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />.toString()</c:otherwise></c:choose></c:if></c:iterate>;
			}
			else
			{
				dispatchEvent(new <c:get select="$dataType/@name" />Event(<c:get select="$dataType/@name" />Event.<c:get select="upper-case($dataType/@name)" />_UPDATED, <c:get select="lowercaseFirst($dataType/@name)" />Var));		
			}
			
			showUserMessage("<c:get select="$dataType/@name" /> saved successfully.");
			
	    }
		
		private function delete<c:get select="$dataType/@name" />ButtonClicked():void
		{
			Alert.show("Delete <c:get select="$dataType/@name" />?", "Confirm Delete", Alert.YES | Alert.NO,this,<c:get select="lowercaseFirst($dataType/@name)" />DeleteHandler);
		}
		
		/** 
		* Executed after user confirms deletion from pop-up box in the preceding function
		*/
		private function <c:get select="lowercaseFirst($dataType/@name)" />DeleteHandler(event:CloseEvent):void
		{
			if (event.detail==Alert.YES){
				var delete<c:get select="$dataType/@name" />Operation:Operation = new Operation();
				delete<c:get select="$dataType/@name" />Operation.name = "delete<c:get select="$dataType/@name" />";
				delete<c:get select="$dataType/@name" />Operation.arguments=[<c:get select="lowercaseFirst($dataType/@name)" />Var];
				delete<c:get select="$dataType/@name" />Operation.addEventListener(ResultEvent.RESULT, remove<c:get select="$dataType/@name" />ResultHandler)
				ro.operations = [delete<c:get select="$dataType/@name" />Operation];
				delete<c:get select="$dataType/@name" />Operation.send();
			}
		}
		
		/** 
		* Executed after ro.delete<c:get select="$dataType/@name" /> is called
		*/
		private function remove<c:get select="$dataType/@name" />ResultHandler(event:ResultEvent):void
		{
			// Broadcasts DETELED event which executes <c:get select="lowercaseFirst($dataType/@name)" />DeletedHandler in the containing Manage<c:get select="$dataType/@name" />.mxml
			dispatchEvent(new <c:get select="$dataType/@name" />Event(<c:get select="$dataType/@name" />Event.<c:get select="upper-case($dataType/@name)" />_DELETED, <c:get select="lowercaseFirst($dataType/@name)" />Var));			
		}
		
		private function faultHandler(event:FaultEvent):void
		{
			Alert.show(event.fault.faultDetail);
		}

		/** 
		* Removes the current tab
		*/
	    private function close<c:get select="$dataType/@name" />ButtonClicked():void
	    {
	   		parent.removeChild(this);
	   	}
	   	
	   	/** 
		* Shows a user message, uses the dissolve control to fade out the message
		*/
	   	private function showUserMessage(<c:get select="lowercaseFirst($dataType/@name)" />UserMessage:String):void
	   	{
	   		<c:get select="lowercaseFirst($dataType/@name)" />UserMessageLabel.visible = true;
	   		<c:get select="lowercaseFirst($dataType/@name)" />UserMessageLabel.text = <c:get select="lowercaseFirst($dataType/@name)" />UserMessage;
	   		<c:get select="lowercaseFirst($dataType/@name)" />UserMessageLabel.visible = false;
	   		
	   	}
	   	
   		private function validate<c:get select="$dataType/@name" />Form(evt:MouseEvent):void 
   		{
            var validatorErrorArray:Array = Validator.validateAll(<c:get select="lowercaseFirst($dataType/@name)" />FormValidators);
            var is<c:get select="$dataType/@name" />FormValid:Boolean = validatorErrorArray.length == 0;
            if (is<c:get select="$dataType/@name" />FormValid) 
            {
                submit<c:get select="$dataType/@name" />Form();
            } 
            else 
            {
                var err:ValidationResultEvent;
                var errorMessageArray:Array = [];
                for each (err in validatorErrorArray) {
                    var errField:String = FormItem(err.currentTarget.source.parent).label
                    errorMessageArray.push(errField + ": " + err.message);
             }
                Alert.show(errorMessageArray.join("\n\n"), "<c:get select="$dataType/@name" /> form validation failed:", Alert.OK);
            }
        }
	   	
	   	
	   	/** 
		* Adds all form validators to an array so all will be validated when the form is submitted
		*/
	   	private function initValidators():void
		{		
			<c:get select="lowercaseFirst($dataType/@name)" />FormValidators = new Array();
		<c:iterate select="$dataType/fields" var="field">		
			<c:choose>
				<c:when test="$field/dataType/@type = 'INTEGER' or $field/dataType/@type = 'DECIMAL'">
					<c:setVariable select="'true'" var="emitValidator" />
				</c:when>
				<c:otherwise>
					<c:setVariable select="'false'" var="emitValidator" />
				</c:otherwise>		
			</c:choose>		
			<c:choose>
				<c:when test="$field/@primaryKey = 'true'">
					<c:setVariable select="'_required'" var="validatorRequiredId" />
					<c:setVariable select="'true'" var="emitValidator" />
				</c:when>
				<c:otherwise>			
					<c:setVariable select="''" var="validatorRequiredId" />
				</c:otherwise>	
			</c:choose>	
		<c:if test="$emitValidator = 'true'">
			<c:get select="lowercaseFirst($dataType/@name)" />FormValidators.push(<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />_validator<c:get select="$validatorRequiredId" />);							
		</c:if>	
		</c:iterate>
		} 	
	   	
	
		]]>
	</mx:Script>	
	
	<!-- Validation for form fields on numerics and primary keys -->
	<c:iterate select="$dataType/fields" var="field">		
		<c:choose>
			<c:when test="$field/dataType/@type = 'INTEGER'">
				<c:setVariable select="'NumberValidator'" var="validatorType" />
				<c:setVariable select="' domain=\"int\"'" var="validatorDomain" />
				<c:setVariable select="'true'" var="emitValidator" />
				<c:setVariable select="' required=\"false\"'" var="validatorRequired" />
			</c:when>
			<c:when test="$field/dataType/@type = 'DECIMAL'">
				<c:setVariable select="'NumberValidator'" var="validatorType" />
				<c:setVariable select="' domain=\"real\"'" var="validatorDomain" />
				<c:setVariable select="'true'" var="emitValidator" />
				<c:setVariable select="' required=\"false\"'" var="validatorRequired" />
			</c:when>
			<c:otherwise>
				<c:setVariable select="'StringValidator'" var="validatorType" />
				<c:setVariable select="''" var="validatorDomain" />
				<c:setVariable select="'false'" var="emitValidator" />
				<c:setVariable select="' required=\"false\"'" var="validatorRequired" />
			</c:otherwise>		
		</c:choose>		
		<c:choose>
			<c:when test="$field/@primaryKey = 'true'">
				<c:setVariable select="' required=\"true\"'" var="validatorRequired" />
				<c:setVariable select="'_required'" var="validatorRequiredId" />
				<c:setVariable select="'true'" var="emitValidator" />
			</c:when>
			<c:otherwise>			
				<c:setVariable select="''" var="validatorRequiredId" />
			</c:otherwise>	
		</c:choose>	
	<c:if test="$emitValidator = 'true'">
	<mx:<c:get select="$validatorType" /><c:get select="$validatorRequired" /><c:get select="$validatorDomain" />
		id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />_validator<c:get select="$validatorRequiredId" />"
		source="{<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />}" 
		property="text"/>
								
	</c:if>	
	</c:iterate>
	
	<c:if test="$timeFormatter = 'true'">
		<mx:DateFormatter id="timeTypeFormatter" formatString="L:NN A" />
		
	</c:if>	
	<c:if test="$dateTimeFormatter = 'true'">
		<mx:DateFormatter id="dateTimeTypeFormatter"  formatString="MM/DD/YYYY L:NN A" />
		
	</c:if>	
	<c:if test="$dateFormatter = 'true'">
		<mx:DateFormatter id="dateTypeFormatter" formatString="MM/DD/YYYY" />
		
	</c:if>
	
		<mx:Dissolve id="dissolveOut" target="{this}" duration="1000" alphaFrom="1.0" alphaTo="0.0" startDelay="1000"/>
					
		<mx:VBox width="100%">			
			<mx:HBox width="100%" styleName="tabheader">
				<mx:Label id="<c:get select="lowercaseFirst($dataType/@name)" />UserMessageLabel" styleName="tabUserMessage" text="" visible="true" hideEffect="{dissolveOut}"/>
				<mx:Spacer width="100%" />
				<mx:Button styleName="closetab" click="close<c:get select="$dataType/@name" />ButtonClicked()"/>
			</mx:HBox>		

		<mx:HBox>
			<mx:Form>
				<c:iterate select="$dataType/fields" var="field">
					<gen:isFieldDisplayable select="$field" var="displayable" />	
					<c:if test="$displayable" >
					<c:setVariable select="''" var="showRequiredAsterisk" />
					<c:if test="$field/@primaryKey = 'true'">
						<c:setVariable select="' required=\"true\"'" var="showRequiredAsterisk" />
					</c:if>
					<mx:FormItem label="<gen:fieldLabel select="$field" />" <c:get select="$showRequiredAsterisk" />>
						<c:choose>
							<c:when test="$field/dataType/@type = 'LARGETEXT'">
								<mx:TextArea id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" text="{<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />}"/>	
							</c:when>
							<c:when test="$field/dataType/@type = 'BOOLEAN'">
								<mx:CheckBox id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" selected="{<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />}"/>	
							</c:when>
							<c:when test="$field/dataType/@type = 'DATE'">
								<mx:DateField id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" selectedDate="{<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />}" />
							</c:when>
							<c:when test="$field/dataType/@type = 'TIME'">
								<mx:TextInput id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" text="{timeTypeFormatter.format(<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />)}" maxWidth="160"/>
							</c:when>
							<c:when test="$field/dataType/@type = 'DATETIME'">
								<mx:TextInput id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" text="{dateTimeTypeFormatter.format(<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />)}" maxWidth="160"/>
							</c:when>
							<c:when test="$field/dataType/@type = 'DECIMAL'">
								<mx:TextInput id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" text="{isNew<c:get select="$dataType/@name" />?'':<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />}" maxWidth="160"/>
							</c:when>
							<c:when test="$field/dataType/@type = 'INTEGER'">
								<mx:TextInput id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" text="{isNew<c:get select="$dataType/@name" />?'':<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />}" maxWidth="160"/>
							</c:when>
							<c:otherwise>
								<mx:TextInput id="<c:get select="lowercaseFirst($dataType/@name)" />_<c:get select="$field/@name" />" text="{<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" />}" maxWidth="160"/>
							</c:otherwise>						
						</c:choose>								
					</mx:FormItem>
					</c:if>
				</c:iterate>
				<mx:FormItem>
						<mx:HBox>
							<mx:Button label="Delete" styleName="delete" click="delete<c:get select="$dataType/@name" />ButtonClicked()" visible="{!isNew<c:get select="$dataType/@name" />}"/>
							<mx:VRule height="20" visible="{!isNew<c:get select="$dataType/@name" />}"/>
							<mx:Button id="save<c:get select="$dataType/@name" />Button" label="Save" styleName="save" click="validate<c:get select="$dataType/@name" />Form(event)"/>
						</mx:HBox>
					</mx:FormItem>	
			</mx:Form>	
		<c:if test="$dataType/relationships"> 
		<mx:VBox>
			<mx:Accordion height="315" width="575">			
		<c:iterate select="$dataType/relationships" var="relationship">	
			<c:setVariable select="$relationship/targetDataType" var="relatedType" />							
				<mx:Canvas id="<c:get select="lowercaseFirst($dataType/@name)" /><c:get select="uppercaseFirst($relationship/@name)"/>Canvas" label="<c:get select="$dataType/@name" /> <c:get select="uppercaseFirst($relationship/@name)"/>" visible="false"<c:if test="string($relationship/@cardinality) = 'ONE'"> horizontalScrollPolicy="off"</c:if> height="100%"/>
		</c:iterate>		
			</mx:Accordion>	
		</mx:VBox>
		</c:if>
		
	</mx:HBox>
	</mx:VBox>
	
</mx:Canvas>
