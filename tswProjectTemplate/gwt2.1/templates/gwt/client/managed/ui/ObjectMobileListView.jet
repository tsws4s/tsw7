<%@ jet package="com.skyway.templates" class="ObjectMobileListViewTemplate"%>
<%@taglib prefix="swgwt" id="com.skyway.integration.google.webtoolkit.common.skywayGWTCodeGenTags"%>
package <sw:package select="$model" alias="ObjectMobileListView"var="pkg"/>;
<java:importsLocation package="{$pkg}"/>


public class <sw:javaType select="$model" alias="ObjectMobileListView" package="false"/> extends <sw:javaType select="$model/project" alias="MobileProxyListView" package="true" emitIncludes="true"/><<sw:javaType select="$model" alias="ObjectProxy" package="true" emitIncludes="true"/>> {

	/**
	 * The renderer used to render cells.
	 */
	private static class CellRenderer extends <java:import>com.google.gwt.text.shared.AbstractSafeHtmlRenderer</java:import><<sw:javaType select="$model" alias="ObjectProxy" package="true" emitIncludes="true"/>> {
		private final String dateStyle = <sw:javaType select="$model/project" alias="ScaffoldMobileApp" package="true" emitIncludes="true"/>.getMobileListResources().cellListStyle().dateProp();
		private final String secondaryStyle = ScaffoldMobileApp.getMobileListResources().cellListStyle().secondaryProp();
		
		<swgwt:getPropertiesWithAction select="$model" var="pickerFields" action="PICKER" defaultToPrimaryKeys="true"/>	
		<c:iterate select="$pickerFields" var="propertyselection">
		<c:setVariable select="$propertyselection/Property" var="field"/>
		private final <java:import>com.google.gwt.text.shared.Renderer</java:import><<swgwt:javaType select="$field" package="true" emitCollectionPolicy="concrete" emitIncludes="true"/>> <sw:getVariableName select="$field"/>Renderer = new <java:import>com.google.gwt.text.shared.AbstractRenderer</java:import><<swgwt:javaType select="$field" package="true" emitCollectionPolicy="concrete" emitIncludes="true"/>>() {
        public String render(<swgwt:javaType select="$field" package="true" emitCollectionPolicy="concrete" emitIncludes="true"/> obj) {
          return obj == null ? "" : String.valueOf(obj);
         }
        };
		</c:iterate>
		
		public <java:import>com.google.gwt.safehtml.shared.SafeHtml</java:import> render(<sw:javaType select="$model" alias="ObjectProxy" package="true" emitIncludes="true"/> value) {
			if (value == null) {
				return <java:import>com.google.gwt.safehtml.shared.SafeHtmlUtils</java:import>.EMPTY_SAFE_HTML;
			}

			// Primary property.
			<java:import>com.google.gwt.safehtml.shared.SafeHtmlBuilder</java:import> sb = new SafeHtmlBuilder();
			
			<swgwt:getPropertiesWithAction select="$model" var="pickerFields" action="PICKER" defaultToPrimaryKeys="true"/>	
			<c:iterate select="$pickerFields" var="propertyselection">
			<c:setVariable select="$propertyselection/Property" var="field"/>
			if (value.get<sw:getVariableName select="$field" capitalize="true"/>() != null) {
				sb.appendEscaped(<sw:getVariableName select="$field"/>Renderer.render(value.get<sw:getVariableName select="$field" capitalize="true"/>()));
			}
			</c:iterate>
			
			sb.appendHtmlConstant("</div>");

			// Date property.
			sb.appendHtmlConstant("<div class=\"" + dateStyle + "\">");
			
			sb.appendHtmlConstant("</div>");
			sb.appendHtmlConstant("</div>");

			return sb.toSafeHtml();
		}
	}

	private static <sw:javaType select="$model" alias="ObjectMobileListView" package="false"/> instance;

	private final <java:import>java.util.Set</java:import><String> paths = new <java:import>java.util.HashSet</java:import><String>();

	public static <sw:javaType select="$model" alias="ObjectMobileListView" package="false"/> instance() {
		if (instance == null) {
			instance = new <sw:javaType select="$model" alias="ObjectMobileListView" package="false"/>();
		}

		return instance;
	}

	public <sw:javaType select="$model" alias="ObjectMobileListView" package="false"/>() {
		super("New <c:get select="$DomainObjName"/>", new CellRenderer());
		
		<persistence:getAutoGeneratedFields select="$model" var="autoGeneratedFields"/>
		<swgwt:getPropertiesWithAction select="$model" var="pickerFields" action="EDIT" excludes="$autoGeneratedFields" defaultToPrimaryKeys="true"/>	
        <c:iterate select="$pickerFields" var="propertyselection">
  	    <c:setVariable select="$propertyselection/Property" var="field"/>
		paths.add("<sw:getVariableName select="$field" capitalize="false"/>");
		</c:iterate>
	}

	public String[] getPaths() {
		return paths.toArray(new String[paths.size()]);
	}
}
