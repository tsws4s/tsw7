<%@ jet package="com.skyway.templates" class="ObjectMobileDetailsViewTemplate"%>
<%@taglib prefix="swgwt" id="com.skyway.integration.google.webtoolkit.common.skywayGWTCodeGenTags"%>

package <sw:package select="$model" alias="ObjectMobileDetailsView"var="pkg"/>;
<java:importsLocation package="{$pkg}"/>


public class <sw:javaType select="$model" alias="ObjectMobileDetailsView" package="false"/> extends <java:import>com.google.gwt.user.client.ui.Composite</java:import> implements <sw:javaType select="$model/project" alias="ProxyDetailsView" package="true" emitIncludes="true"/><<sw:javaType select="$model" alias="ObjectProxy" package="true" emitIncludes="true"/>> {
	interface Binder extends <java:import>com.google.gwt.uibinder.client.UiBinder</java:import><<java:import>com.google.gwt.user.client.ui.HTMLPanel</java:import>, <sw:javaType select="$model" alias="ObjectMobileDetailsView" package="false"/>> {}

	private static final Binder BINDER = <java:import>com.google.gwt.core.client.GWT</java:import>.create(Binder.class);

	private static <sw:javaType select="$model" alias="ObjectMobileDetailsView" package="false"/> instance;

	public static <sw:javaType select="$model" alias="ObjectMobileDetailsView" package="false"/> instance() {
		if (instance == null) {
			instance = new <sw:javaType select="$model" alias="ObjectMobileDetailsView" package="false"/>();
		}
		return instance;
	}

	<sw:javaType select="$model" alias="ObjectProxy" package="false"/> proxy;
	
	<persistence:getAutoGeneratedFields select="$model" var="autoGeneratedFields"/>
	
	<swgwt:getPropertiesWithAction select="$model" var="pickerFields" action="EDIT" excludes="$autoGeneratedFields" defaultToPrimaryKeys="true"/>	
      <c:iterate select="$pickerFields" var="propertyselection">
  	  <c:setVariable select="$propertyselection/Property" var="field"/>
	  @<java:import>com.google.gwt.uibinder.client.UiField</java:import> <java:import> com.google.gwt.dom.client.Element</java:import> <sw:getVariableName select="$field" capitalize="false"/>;
	</c:iterate>
	
	<c:iterate select="$model/relationships" var="relationship">
  	<c:setVariable select="$relationship/targetDataType" var="dataType" />
  	<sw:relationshipCardinality select="$relationship" var="cardinality" />
    @<java:import>com.google.gwt.uibinder.client.UiField</java:import> <java:import>com.google.gwt.dom.client.Element</java:import> <sw:getVariableName select="$relationship" capitalize="false"/>;
	</c:iterate>
	
	@UiField <java:import>com.google.gwt.event.dom.client.HasClickHandlers</java:import> delete;

	private Delegate delegate;

	public <sw:javaType select="$model" alias="ObjectMobileDetailsView" package="false"/>() {
		init<java:import>com.google.gwt.user.client.ui.Widget</java:import>(BINDER.createAndBindUi(this));
	}

  	public Widget asWidget() {
		return this;
	}
  
	public boolean confirm(String msg) {
		return <java:import>com.google.gwt.user.client.Window</java:import>.confirm(msg);
	}

	public <sw:javaType select="$model" alias="ObjectProxy" package="true" emitIncludes="true"/> getValue() {
		return proxy;
	}

	@<java:import>com.google.gwt.uibinder.client.UiHandler</java:import>("delete")
	public void onDeleteClicked(<java:import>com.google.gwt.event.dom.client.ClickEvent</java:import> e) {
		delegate.deleteClicked();
	}

	public void setDelegate(Delegate delegate) {
		this.delegate = delegate;
	}

	public void setValue(<sw:javaType select="$model" alias="ObjectProxy" package="true" emitIncludes="true"/> proxy) {
		this.proxy = proxy;
		<persistence:getAutoGeneratedFields select="$model" var="autoGeneratedFields"/>
	
		<swgwt:getPropertiesWithAction select="$model" var="pickerFields" action="EDIT" excludes="$autoGeneratedFields" defaultToPrimaryKeys="true"/>	
        <c:iterate select="$pickerFields" var="propertyselection">
  	    <c:setVariable select="$propertyselection/Property" var="field"/>
		<sw:getVariableName select="$field" capitalize="false"/>.setInnerText(String.valueOf(proxy.get<sw:getVariableName select="$field" capitalize="true"/>()));
		</c:iterate>
		<c:iterate select="$model/relationships" var="relationship">
	  	<c:setVariable select="$relationship/targetDataType" var="dataType" />
	  	<sw:relationshipCardinality select="$relationship" var="cardinality" />
	  	<c:if test="$cardinality = 'MANY'" ><sw:getVariableName select="$relationship" capitalize="false"/>.setInnerText(proxy.get<sw:getVariableName select="$relationship" capitalize="true"/>() == null ? "" : <sw:javaType select="$model/project" alias="CollectionRenderer" package="true"/>.of(<sw:javaType select="$dataType" alias="ObjectProxyRenderer" package="true" emitIncludes="true"/>.instance()).render(proxy.get<sw:getVariableName select="$relationship" capitalize="true"/>()));</c:if>
		<c:if test="$cardinality = 'ONE'" ><sw:getVariableName select="$relationship" capitalize="false"/>.setInnerText(<sw:javaType select="$dataType" alias="ObjectProxyRenderer" package="true"/>.instance().render(proxy.get<sw:getVariableName select="$relationship" capitalize="true"/>()));</c:if>
	 	</c:iterate>	
	}
}
