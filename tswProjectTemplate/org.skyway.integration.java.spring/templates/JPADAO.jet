<%@ jet 
package="org.skyway.integration.java.spring.jet.core" 
class="JPADAOTemplate" 
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="swspr" id="org.skyway.integration.java.spring.skywaySpringCodeGenTags"%>
<%@taglib prefix="persistence" id="org.skyway.integration.data.persistence.skywayPersistenceTags"%>


package <sw:package select="$model" var="pkg" alias="primary" />;
<sw:javaType select="$model" package="true" var="fullyQualifiedClassName" emit="false"/>
<java:importsLocation package="{$pkg}"/>
<java:impliedImport name="{$fullyQualifiedClassName}"/>

<sw:getDataTypeForDao select="$model" var="primaryDataType"/>
<sw:getVariableName select="$primaryDataType" uncapitalize="true" var="domainObjName" emit="false"/> <sw:getVariableName select="$model" uncapitalize="false" var="DomainObjName" emit="false"/>

<sw:variableStorageReset scope="class" />
<sw:getModelExtension select="$model" extension="daobean" var="beanDetail" />
<swspr:scope select="$beanDetail" />
/**
<sw:documentation select="$model" format=" * " />
<sw:modelCoreReference select="$model" />
<sw:generated />
 */
@<java:import>org.springframework.stereotype.Repository</java:import>("<swspr:componentID select="$model" alias="interface" />")
<c:include template="templates/common/spring/ClassTransactionAnnotation.jet" />
public class <sw:javaType alias="primary" select="$model" /> extends <java:import>org.skyway.spring.util.dao.AbstractJpaDao</java:import><<sw:javaType select="$primaryDataType"/>> implements <java:import><sw:javaType alias="interface" select="$model" package="true"/></java:import> {
	<persistence:getPersistenceUnitName select="$model" var="puName"/>
	
	/**
	 * Set of entity classes managed by this DAO.  Typically a DAO manages a single entity.
	 *
	 <sw:generated />
	 */
	 private final static <java:import>java.util.Set<Class<?>></java:import> dataTypes = 
	 new <java:import>java.util.HashSet<Class<?>></java:import> (<java:import>java.util.Arrays</java:import>.
	 asList( new Class<?>[] {
	 	<c:iterate select="$model/dataTypes" var="nextType" delimiter=",">
	 		<java:import><sw:javaType select="$nextType" package="true"/></java:import>.class
	 	</c:iterate>})) ;
	
	/**
	 * EntityManager injected by Spring for persistence unit <c:get select="$puName" />
	 *
	 <sw:generated />
	 */
    @<java:import>javax.persistence.PersistenceContext</java:import>(unitName="<c:get select="$puName" />")
	private <java:import>javax.persistence.EntityManager</java:import> entityManager;
	
	/**
	 * Instantiates a new <sw:javaType alias="primary" select="$model" />
	 *
	 <sw:generated />
 	 */
	public <sw:javaType alias="primary" select="$model" />() {
		super();
	}
	 
	/**
	 * Get the entity manager that manages persistence unit <c:get select="$puDetail/persistenceUnitName" />
	 *
	 <sw:generated />
 	 */
	public <java:import>javax.persistence.EntityManager</java:import> getEntityManager(){
		return entityManager;
	}
	 
	/**
	 * Returns the set of entity classes managed by this DAO.
	 *
	 <sw:generated />
	 */
	public <java:import>java.util.Set<Class<?>></java:import> getTypes()	{
		return dataTypes;
	}
	
	<c:iterate select="$model/namedQueries" var="namedQuery">
		<sw:daoStatementType statementText="$namedQuery/queryText/@text" var="statementType" />
	 	<c:if test="lower-case($namedQuery/@queryType) = 'jpql'" >
			<c:choose>
				<c:when test="string($statementType) = 'select'" >
 					<c:include template="templates/namedquery/JPASelectFragment.jet" />
 				</c:when>
				<c:when test="string($statementType) = 'update'" >
 					<c:include template="templates/namedquery/JPAUpdateFragment.jet" />
 				</c:when>
		 	</c:choose>
			 	
		</c:if>
	 	<c:if test="lower-case($namedQuery/@queryType) = 'jpanative'" >
			<c:choose>
				<c:when test="string($statementType) = 'select'" >
 					<c:include template="templates/namedquery/JPASelectFragment.jet" />
 				</c:when>
				<c:when test="string($statementType) = 'update'" >
 					<c:include template="templates/namedquery/JPAUpdateFragment.jet" />
 				</c:when>
		 	</c:choose>
			 	
		</c:if>
	</c:iterate>
	
	/**
	 * Used to determine whether or not to merge the entity or persist the entity when calling Store
	 * @see store
	 * 
	 *
	 <sw:generated />
	 */
	public boolean canBeMerged (<sw:javaType select="$primaryDataType"/> entity) {
		<persistence:getAutoGeneratedFields select="$primaryDataType" var="autoGeneratedFields"/>
		<c:choose>
		<c:when test="$autoGeneratedFields">
		return <c:iterate select="$autoGeneratedFields" var="field" delimiter=" && ">entity.get<sw:getVariableName select="$field" capitalize="true"/>() != null</c:iterate>; 
		</c:when>
		<c:otherwise>
		return true;
		</c:otherwise>
		</c:choose>
	}
}
	