<%@ jet 
package="com.skyway.integration.service.flex.jet.mxml" 
class="CrudRelatedManyGridTemplate"
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="swspr" id="org.skyway.integration.java.spring.skywaySpringCodeGenTags"%>
<%@taglib prefix="gen" id="com.skyway.scaffolding.crud.common.generationTags"%>
<?xml version="1.0" encoding="utf-8"?>
<!--
<c:get select="$relatedType/@name" />Grid.mxml is the editable grid component related to the parent 
<c:get select="$dataType/@name" /> object.

Generated by MyEclipse for Spring Scaffolding
Adobe Flex 4.0

Any changes to this file need to be recompiled into the swf file
by running the <c:get select="$dataType/@name" />build.xml ant task. (If flex/flash builder 
isn't part of the IDE)
-->
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx"					
					styleName="accordionContent"
					label="<c:get select="$dataType/@name" /> <c:get select="uppercaseFirst($relationship/@name)" /> Grid"
					width="100%" height="100%"
					skinClass="assets.skins.CustomScrollNavContent">
	
	<fx:Script>
		<![CDATA[
			import <sw:javaType select="$dataType" package="true" />;
			import <sw:javaType select="$dataType" package="true" />Event;
			import <sw:javaType select="$relationship" package="true" emitCollectionPolicy="omit" />;
			import <sw:javaType select="$relationship" package="true" emitCollectionPolicy="omit" />Event;
			
			import mx.controls.Alert;
			import mx.controls.dataGridClasses.DataGridColumn;
			import mx.controls.TextInput;
			import mx.events.CloseEvent;
			import mx.events.DataGridEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;			
			import mx.rpc.remoting.Operation;
			import mx.rpc.remoting.RemoteObject;						
			
			[Bindable] 
			public var <c:get select="lowercaseFirst($dataType/@name)" />Var:<c:get select="$dataType/@name" />;
						
			private var add<c:get select="uppercaseFirst($relationship/@name)" />PopUp:<c:get select="uppercaseFirst($relationship/@name)" />Form;
			private var gridItemOldValue:Number;
			
			public var ro:RemoteObject;
			
			/** 
			* Called when a cell in the grid is activated for editing to save the old value
			*/
			private function itemEditPreEnd(event:DataGridEvent):void
			{		
			   var grid:DataGrid = event.target as DataGrid;	 			   
			   var field:String = event.dataField;			   
			   var row:Number = Number(event.rowIndex);                
			
			   if (grid != null)
			   {			      
			      gridItemOldValue = event.itemRenderer.data[field];			     
			   }
			}
			
			/** 
			* Called after a cell in the grid is edited
			*/
			private function itemEditPostEnd(event:DataGridEvent):void
			{
			   var grid:DataGrid = event.target as DataGrid;
			   var field:String = event.dataField;
			   var row:Number = Number(event.rowIndex);
			   if (grid != null)
			   {
			     
			      var gridItemNewValue:Number = event.itemRenderer.data[field];
			      
			      // If cell contents have changed, call the server to update
			      if (gridItemNewValue != gridItemOldValue)
			      {
			      	var <c:get select="lowercaseFirst($relationship/@name)" />Var:<c:get select="$relatedType/@name" /> =  event.itemRenderer.data as <c:get select="$relatedType/@name" />;			      	
					<c:iterate select="$relatedType/relationships" var="grandchild">
					<c:get select="lowercaseFirst($relationship/@name)" />Var.<c:get select="$grandchild/@name" /> = null;
					</c:iterate>				
					<c:setVariable select="0" var="keyCount" />
					// Calls the remoting object to save the <c:get select="uppercaseFirst($relationship/@name)" /> and its relationship
					var save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation:Operation = new Operation();
					save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.name = "save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />";
					save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.arguments=[<c:iterate select="$dataType/fields" var="field"><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0">, </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /></c:if></c:iterate>, <c:get select="lowercaseFirst($relationship/@name)"/>Var];
					ro.operations = [save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation];
					save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.send();
			      }
			   }
			}
			
			/** 
			* Called when add <c:get select="uppercaseFirst($relationship/@name)" /> button clicked.  
			* Pops up <c:get select="uppercaseFirst($relationship/@name)" /> form.
			*/
			private function add<c:get select="uppercaseFirst($relationship/@name)" />():void
			{
				add<c:get select="uppercaseFirst($relationship/@name)" />PopUp = new <c:get select="uppercaseFirst($relationship/@name)" />Form();
				add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.addEventListener(<c:get select="$relatedType/@name" />Event.<c:get select="upper-case($relatedType/@name)" />_CREATED, save<c:get select="uppercaseFirst($relationship/@name)" />);
				add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.addEventListener(<c:get select="$relatedType/@name" />Event.<c:get select="upper-case($relatedType/@name)" />_CANCELLED, cancel<c:get select="uppercaseFirst($relationship/@name)" />);
				
				PopUpManager.addPopUp(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp,this,true);
				add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.addEventListener("close", cancel<c:get select="uppercaseFirst($relationship/@name)" />);
				PopUpManager.centerPopUp(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp);
				
			}
			
			/** 
			* Saves <c:get select="uppercaseFirst($relationship/@name)" />
			*/
			private function save<c:get select="uppercaseFirst($relationship/@name)" />(event:Event):void
			{			
				<c:setVariable select="'false'" var="formatTime" />
				<c:setVariable select="'false'" var="formatDateTime" />
				<c:setVariable select="'false'" var="formatDate" />
				var new<c:get select="uppercaseFirst($relationship/@name)" />:<c:get select="$relatedType/@name" /> = new <c:get select="$relatedType/@name" />();			
				// Map the form fields to the <c:get select="$relatedType/@name" /> action sript object
				<c:iterate select="$relatedType/fields" var="field">	
					<gen:isFieldDisplayable select="$field" var="displayable" />	
					<c:if test="$displayable" >		
					<c:choose>
						<c:when test="$field/dataType/@type = 'BOOLEAN'">
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.selected;
						</c:when>
						<c:when test="$field/dataType/@type = 'INTEGER'">
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = parseInt(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text);
						</c:when>
						<c:when test="$field/dataType/@type = 'DECIMAL'">
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = (add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text=='')?0:parseFloat(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text);
						</c:when>
					<c:when test="$field/dataType/@type = 'DATE'">
					<c:setVariable select="'true'" var="formatDate" />
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.selectedDate;
						</c:when>
					<c:when test="$field/dataType/@type = 'TIME'">
					<c:setVariable select="'true'" var="formatTime" />
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = (add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text=='')?null:new Date(Date.parse("1/1/1970 " + add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text));
						</c:when>
					<c:when test="$field/dataType/@type = 'DATETIME'">
					<c:setVariable select="'true'" var="formatDateTime" />
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = (add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text=='')?null:new Date(Date.parse(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text));
						</c:when>
						<c:otherwise>
				new<c:get select="uppercaseFirst($relationship/@name)" />.<c:get select="$field/@name" /> = add<c:get select="uppercaseFirst($relationship/@name)" />PopUp.<c:get select="lowercaseFirst($relatedType/@name)" />_<c:get select="$field/@name" />.text;
						</c:otherwise>						
					</c:choose>
					</c:if>
				</c:iterate>			
				<c:setVariable select="0" var="keyCount" />
				// Call the server to save the <c:get select="$dataType/@name" /> <c:get select="uppercaseFirst($relationship/@name)" />
				var save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation:Operation = new Operation();
				save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.name = "save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />";
				save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.arguments=[<c:iterate select="$dataType/fields" var="field"><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0">, </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /></c:if></c:iterate>, new<c:get select="uppercaseFirst($relationship/@name)"/>];
				ro.operations = [save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation];
				save<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.send();
				
				// Add the new object to the client side grid array and select it
				<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$relationship/@name" />.addItemAt(new<c:get select="uppercaseFirst($relationship/@name)" />,0);
				dg_<c:get select="lowercaseFirst($relationship/@name)" />s.selectedIndex = 0;
				
				PopUpManager.removePopUp(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp);
				
			}
			
			private function cancel<c:get select="uppercaseFirst($relationship/@name)" />(event:Event):void
			{
				event.target.removeEventListener("close", cancel<c:get select="uppercaseFirst($relationship/@name)" />);
				PopUpManager.removePopUp(add<c:get select="uppercaseFirst($relationship/@name)" />PopUp);
			}
			
			private function alert<c:get select="uppercaseFirst($relationship/@name)" />DeleteConfirmation():void
			{
				Alert.show("Delete selected <c:get select="uppercaseFirst($relationship/@name)" />?", "Confirm Delete", Alert.YES | Alert.NO,this,<c:get select="lowercaseFirst($relationship/@name)" />DeleteHandler);
			}
			<c:setVariable select="0" var="keyCount" />
			/** 
			* Called as a response to the delete confirmation pop-up
			*/
			private function <c:get select="lowercaseFirst($relationship/@name)" />DeleteHandler(event:CloseEvent):void 
			{
				if (event.detail==Alert.YES){
					var <c:get select="lowercaseFirst($relatedType/@name)" />ToDeleteVar:<c:get select="$relatedType/@name" /> = dg_<c:get select="lowercaseFirst($relationship/@name)" />s.selectedItem as <c:get select="$relatedType/@name" />;
					
					var delete<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation:Operation = new Operation();
					delete<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.name = "delete<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />";
					delete<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.arguments=[<c:setVariable select="0" var="keyCount" /><c:iterate select="$dataType/fields" var="field" ><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0">, </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$field/@name" /></c:if></c:iterate>, <c:setVariable select="0" var="keyCount" /><c:iterate select="$relatedType/fields" var="field" ><c:if test="$field/@primaryKey = 'true'"><c:if test="$keyCount > 0">, </c:if><c:setVariable select="$keyCount+1" var="keyCount" /><c:get select="lowercaseFirst($relatedType/@name)" />ToDeleteVar.<c:get select="$field/@name" /></c:if></c:iterate>];
					ro.operations = [delete<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation];
					delete<c:get select="$dataType/@name" /><c:get select="uppercaseFirst($relationship/@name)" />Operation.send();
					
					<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$relationship/@name" />.removeItemAt(dg_<c:get select="lowercaseFirst($relationship/@name)" />s.selectedIndex);
				} 
			}			
			<c:if test="$formatTime = 'true'">
			
		 	private function timeLabelFormatter(item:Object, column:DataGridColumn):String
			{
				var value:Object = item[column.dataField];
				
				return timeTypeFormatter.format(value);
			}
			</c:if>	
			<c:if test="$formatDateTime = 'true'">
			
			private function dateTimeLabelFormatter(item:Object, column:DataGridColumn):String
			{
				var value:Object = item[column.dataField];
				
				return dateTimeTypeFormatter.format(value);
			}
			</c:if>			
			<c:if test="$formatDate = 'true'">
			
			private function dateLabelFormatter(item:Object, column:DataGridColumn):String
			{
				var value:Object = item[column.dataField];
				
				return dateTypeFormatter.format(value);
			}
			</c:if>			
		]]>	
	</fx:Script>
	
	<fx:Declarations>
	
	<c:if test="$formatTime = 'true'">
	<mx:DateFormatter id="timeTypeFormatter" formatString="L:NN A" />
		
	</c:if>	
	<c:if test="$formatDateTime = 'true'">
	<mx:DateFormatter id="dateTimeTypeFormatter"  formatString="MM/DD/YYYY L:NN A" />
		
	</c:if>	
	<c:if test="$formatDate = 'true'">
	<mx:DateFormatter id="dateTypeFormatter"  formatString="MM/DD/YYYY" />
		
	</c:if>	
	</fx:Declarations>
	<s:layout>
			<s:VerticalLayout paddingBottom="10" paddingLeft="10" paddingTop="10"/>
	</s:layout>
			
	<mx:DataGrid id="dg_<c:get select="lowercaseFirst($relationship/@name)" />s" dataProvider="{<c:get select="lowercaseFirst($dataType/@name)" />Var.<c:get select="$relationship/@name" />}" editable="true"
				 initialize="dg_<c:get select="lowercaseFirst($relationship/@name)" />s.addEventListener(DataGridEvent.ITEM_EDIT_END, itemEditPreEnd, false, 100);
               	             dg_<c:get select="lowercaseFirst($relationship/@name)" />s.addEventListener(DataGridEvent.ITEM_EDIT_END, itemEditPostEnd, false, -100);">			
		<mx:columns>
			<c:iterate select="$relatedType/fields" var="field" >
			<gen:displayFieldInList select="$field" var="displayable" />
			<c:if test="$displayable">
			<c:choose>
			<c:when test="$field/@primaryKey = 'true'">
				<c:setVariable select="'editable=\"false\"'" var="editableAttribute" />
			</c:when>
			<c:otherwise>			
				<c:setVariable select="''" var="editableAttribute" />
			</c:otherwise>	
		</c:choose>	
		<c:choose>
			<c:when test="$field/dataType/@type = 'DATE'">
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" /> 
				labelFunction="dateLabelFormatter"
				itemEditor="mx.controls.DateField" 
    			editorDataField="selectedDate"/>
			</c:when>
			<c:when test="$field/dataType/@type = 'TIME'">
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" /> 
				labelFunction="timeLabelFormatter"
				editorDataField="returnTime">
            	<mx:itemEditor>
                <fx:Component>
					<mx:VBox horizontalScrollPolicy="off" verticalScrollPolicy="off">    
				    <fx:Script>
				        <![CDATA[           
				            [Bindable]
				            public var returnTime:Date;	
				        ]]>
				    </fx:Script>
				    <fx:Declarations>
				    	<mx:DateFormatter id="timeTypeItemEditorFormatter" formatString="L:NN A" />
				    </fx:Declarations>					    
				    <mx:TextInput id="newTime" text="{timeTypeItemEditorFormatter.format(data.<c:get select="$field/@name" />)}"
				        updateComplete="returnTime=new Date(Date.parse('1/1/1970 ' + newTime.text));" 
				        change="returnTime=new Date(Date.parse('1/1/1970 ' + newTime.text));"
				        />            
					</mx:VBox>
				 </fx:Component>
				 </mx:itemEditor>                     
			</mx:DataGridColumn>
			</c:when>
			<c:when test="$field/dataType/@type = 'DATETIME'">
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" /> 
				labelFunction="dateTimeLabelFormatter"
				editorDataField="returnDateTime">
            	<mx:itemEditor>
                <fx:Component>
					<mx:VBox horizontalScrollPolicy="off" verticalScrollPolicy="off">    
				    <fx:Script>
				        <![CDATA[           
				            [Bindable]
				            public var returnDateTime:Date;	
				        ]]>
				    </fx:Script>
				    <fx:Declarations>
				    	<mx:DateFormatter id="dateTimeTypeItemEditorFormatter"  formatString="MM/DD/YYYY L:NN A" />
				    </fx:Declarations>					    
				    <mx:TextInput id="newDateTime" text="{dateTimeTypeItemEditorFormatter.format(data.<c:get select="$field/@name" />)}"
				        updateComplete="returnDateTime=new Date(Date.parse(newDateTime.text));" 
				        change="returnDateTime=new Date(Date.parse(newDateTime.text));"
				        />            
					</mx:VBox>
				 </fx:Component>
				 </mx:itemEditor>                     
			</mx:DataGridColumn>
			</c:when>
			<c:otherwise>
			<mx:DataGridColumn dataField="<c:get select="$field/@name" />" headerText="<gen:fieldLabel select="$field" />" <c:get select="$editableAttribute" />/>
			</c:otherwise>
		</c:choose>
			</c:if>
			</c:iterate>
		</mx:columns>
	</mx:DataGrid>
	<s:HGroup>
		<s:Button id="add<c:get select="uppercaseFirst($relationship/@name)" />Button" label="Add <c:get select="uppercaseFirst($relationship/@name)" />" styleName="new" click="add<c:get select="uppercaseFirst($relationship/@name)" />()"/>
		<s:Line height="20"/>
		<s:Button id="delete<c:get select="uppercaseFirst($relationship/@name)" />Button" label="Delete Selected" styleName="delete" click="alert<c:get select="uppercaseFirst($relationship/@name)" />DeleteConfirmation()"/>				
	</s:HGroup>	
</s:NavigatorContent>
