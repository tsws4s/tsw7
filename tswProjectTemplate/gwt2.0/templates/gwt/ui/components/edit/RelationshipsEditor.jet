<%@ jet 
package="com.skyway.integration.google.webtoolkit.deploy.templates" 
class="RelationshipsEditorTemplate" 
%>
<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="swgwt" id="com.skyway.integration.google.webtoolkit.common.skywayGWTCodeGenTags"%>

package <sw:package select="$model" alias="gwteditor" var="pkg"/>;
<sw:javaType select="$model" package="true" var="fullyQualifiedClassName" emit="false"/>
<java:importsLocation package="{$pkg}"/>
<java:impliedImport name="{$fullyQualifiedClassName}"/>

<sw:getVariableName select="$model" uncapitalize="true" var="domainObjName" emit="false"/> <sw:getVariableName select="$model" uncapitalize="false" var="DomainObjName" emit="false"/>
<swgwt:getGWTDataType select="$model" var="gwtDataType"/>

/**
 * Presenter for <sw:javaType select="$model" alias="gwtdatatype" package="false"/> editing
<sw:generated />
 */
public class <sw:javaType select="$model" alias="gwtrelationshipseditor" package="false"/> {
	// Display Interface that must be implemented to bind a Display to this editor
	interface Display {
	<c:iterate select="$model/relationships" var="relationship">
	<sw:relationshipCardinality select="$relationship" var="cardinality" />
	<c:setVariable select="$relationship/targetDataType" var="dataType" />
		<c:if test="$cardinality = 'MANY'" >public <java:import><sw:javaType select="$dataType" alias="gwtmultirelatedwidget" package="true"/></java:import> get<sw:getVariableName select="$relationship" capitalize="true"/>Widget();</c:if>
		<c:if test="$cardinality = 'ONE'" >public <java:import><sw:javaType select="$dataType" alias="gwtsinglerelatedwidget" package="true"/></java:import> get<sw:getVariableName select="$relationship" capitalize="true"/>Widget();</c:if>
	</c:iterate>
	}
	
	/**
	 * Reference to the Display that is bound to this presenter 
	<sw:generated />
	 */
	private Display display;
	
	/**
	 * The <sw:javaType select="$model" alias="gwtdatatype" package="false"/> being edited
	<sw:generated />
	 */
	private <java:import><sw:javaType select="$model" alias="gwtdatatype" package="true"/></java:import> <c:get select="$domainObjName"/>;
	
		
	<c:iterate select="$model/relationships" var="relationship">
	<c:setVariable select="$relationship/targetDataType" var="dataType" />
	/**
	 * Handle to editor for the <sw:getVariableName select="$relationship" capitalize="false"/> relationship
	<sw:generated />
	 */
	private <java:import><sw:javaType select="$dataType" alias="gwtrelatededitor" package="true"/></java:import> <sw:getVariableName select="$relationship" capitalize="false"/>Editor;
	</c:iterate>
	

	/**
	 * Constructor that takes an instance of the Display to bind to this presenter
	<sw:generated />
	 */
	public <sw:javaType select="$model" alias="gwtrelationshipseditor" package="false"/> (Display display) {
		bindDisplay (display);
	}
	

	/**
	 * Binds the view to the presenter
	<sw:generated />
	 */
	void bindDisplay (Display display) {
		this.display = display;
		
		<java:import><sw:javaType select="$model/project" alias="gwteventbus" package="true"/></java:import>.get().addHandler(<java:import><sw:javaType select="$model" alias="gwtstoredevent" package="true"/></java:import>.TYPE, new <java:import><sw:javaType select="$model" alias="gwtstoredhandler" package="true"/></java:import>() {
			public void on<c:get select="$DomainObjName"/>Stored(<sw:javaType select="$model" alias="gwtstoredevent" package="false"/> event) {
				if (new <java:import><sw:javaType select="$model" alias="gwtdatatypeid" package="true"/></java:import>(event.get<c:get select="$DomainObjName"/>()).equals(new <java:import><sw:javaType select="$model" alias="gwtdatatypeid" package="true"/></java:import>(<c:get select="$domainObjName"/>)))
					edit (event.get<c:get select="$DomainObjName"/>());
			}
		});
	}
	
	/**
	 * Sets the <sw:javaType select="$model" alias="gwtdatatype" package="false"/> being edited and binds its properties to the Display
	<sw:generated />
	 */
	public void edit (<sw:javaType select="$model" alias="gwtdatatype" package="false"/> <c:get select="$domainObjName"/>) {
		this.<c:get select="$domainObjName"/> = <sw:javaType select="$model" alias="gwtdatatype" package="false"/>.from(<c:get select="$domainObjName"/>);
		
		<c:iterate select="$model/relationships" var="relationship">
		<c:setVariable select="$relationship/targetDataType" var="dataType" />
		<java:import><sw:javaType select="$dataType" alias="gwtloadrelated" package="true"/></java:import><<sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>> load<sw:getVariableName select="$relationship" capitalize="false"/> = new <sw:javaType select="$dataType" alias="gwtloadrelated" package="false"/><<sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>>("<sw:getVariableName select="$relationship" capitalize="false"/>", new <java:import><sw:javaType select="$model" alias="gwtdatatypeid" package="true"/></java:import>(<c:get select="$domainObjName"/>));
		<java:import><sw:javaType select="$dataType" alias="gwtremovefromrelated" package="true"/></java:import><<sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>> remove<sw:getVariableName select="$relationship" capitalize="false"/> = new <sw:javaType select="$dataType" alias="gwtremovefromrelated" package="false"/><<sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>>("<sw:getVariableName select="$relationship" capitalize="false"/>", new <sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>(<c:get select="$domainObjName"/>));
		<java:import><sw:javaType select="$dataType" alias="gwtaddtorelated" package="true"/></java:import><<sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>> add<sw:getVariableName select="$relationship" capitalize="false"/> = new <sw:javaType select="$dataType" alias="gwtaddtorelated" package="false"/><<sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>>("<sw:getVariableName select="$relationship" capitalize="false"/>", new <sw:javaType select="$model" alias="gwtdatatypeid" package="false"/>(<c:get select="$domainObjName"/>));
			
		<sw:getVariableName select="$relationship" capitalize="false"/>Editor = new <sw:javaType select="$dataType" alias="gwtrelatededitor" package="false"/>(<java:import><sw:javaType select="$model" alias="gwtservice" package="true"/></java:import>.Util.getInstance(), load<sw:getVariableName select="$relationship" capitalize="false"/>, remove<sw:getVariableName select="$relationship" capitalize="false"/>, add<sw:getVariableName select="$relationship" capitalize="false"/>);
		<sw:getVariableName select="$relationship" capitalize="false"/>Editor.bindDisplay(display.get<sw:getVariableName select="$relationship" capitalize="true"/>Widget());
		</c:iterate>
	}
	
	/**
	 * Returns the <sw:javaType select="$model" alias="gwtdatatype" package="false"/> being edited or null if the edit was canceled
	<sw:generated />
	 */
	public <sw:javaType select="$model" alias="gwtdatatype" package="false"/> get<c:get select="$DomainObjName"/>() {
		return <c:get select="$domainObjName"/>;
	}	
}

