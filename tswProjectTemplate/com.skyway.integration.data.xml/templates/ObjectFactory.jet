<%@ jet 
package="com.skyway.integration.data.xml.jet.data" 
class="ObjectFactoryTemplate" 
%>

<%@taglib id="org.eclipse.jet.javaTags" prefix="java"%>
<%@taglib prefix="ws" id="org.eclipse.jet.workspaceTags"%>
<%@taglib prefix="c" id="org.eclipse.jet.controlTags"%>
<%@taglib prefix="sw" id="org.skyway.integration.java.skywayCodeGenTags"%>
<%@taglib prefix="persistence" id="org.skyway.integration.data.persistence.skywayPersistenceTags"%>
<%@taglib prefix="jaxb" id="com.skyway.integration.data.xml.skywayJAXBTags"%>

package <sw:package select="$model" var="pkg" alias="object-factory"/>;

<sw:javaType select="$model" package="true" var="fullyQualifiedClassName" emit="false"/>
<java:importsLocation package="{$pkg}"/>
<java:impliedImport name="{$fullyQualifiedClassName}"/>
import javax.xml.bind.annotation.*;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the  <sw:package alias="object-factory" select="$model" var="pkg"/> package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 * <sw:generated />  
 */
@XmlRegistry
public class ObjectFactory {
	
	
    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: <sw:package select="$model" var="pkg"/>
     * 
 	 * <sw:generated />  
     */
    public ObjectFactory() {
    }
    
		
	<c:iterate select="$model/dataTypes" var="dataType">
	 /**
     * Create an instance of {@link <sw:javaType select="$dataType" package="false"/> }
     * 
 	 * <sw:generated />  
     */
    public <sw:javaType select="$dataType" package="false"/> create<sw:javaType select="$dataType" package="false"/>() {
        return new <sw:javaType select="$dataType" package="false"/>();
    }
	
	</c:iterate>
		
}
