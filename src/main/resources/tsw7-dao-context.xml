<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:security="http://www.springframework.org/schema/security"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop 
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	   http://www.springframework.org/schema/tx 
	   http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
	   http://www.springframework.org/schema/context 
	   http://www.springframework.org/schema/context/spring-context-3.0.xsd   
	   http://www.springframework.org/schema/jee 
	   http://www.springframework.org/schema/jee/spring-jee-3.0.xsd	   
	   http://www.springframework.org/schema/lang
	   http://www.springframework.org/schema/lang/spring-lang-3.0.xsd
	   http://www.springframework.org/schema/security 
	   http://www.springframework.org/schema/security/spring-security-3.0.xsd">




	<!-- ******************************************************************** -->
	<!-- Scan for dao layer annotated beans -->
	<!-- ******************************************************************** -->
	<!-- context:component-scan base-package="tsw.security" scoped-proxy="interfaces"/ -->
	
	<context:component-scan base-package="tsw.dao" scoped-proxy="interfaces" />
	
	<!-- ******************************************************************** -->
	<!-- Mark bean transactions as annotation driven -->
	<!-- ******************************************************************** -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	
	<!-- ******************************************************************** -->
	<!-- PropertyConfigurer for the DAO -->
	<!-- ******************************************************************** -->
	<context:property-placeholder location="classpath:tsw7-dao.properties"  />		
	
	<!-- ******************************************************************** -->
	<!-- Setup the transaction manager -->
	<!-- ******************************************************************** -->
		<!-- Using Atomikos Transaction Manager -->
		<bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager" init-method="init"
			destroy-method="close">
			<property name="forceShutdown" value="true" />
			<property name="startupTransactionService" value="true" />
			<property name="transactionTimeout" value="60" />
		</bean>
  		  
		<bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" />
		
		<!-- Configure the Spring framework to use JTA transactions from Atomikos -->
		<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
			<property name="transactionManager" ref="atomikosTransactionManager" />
			<property name="userTransaction" ref="atomikosUserTransaction" />
			<property name="transactionSynchronizationName" value="SYNCHRONIZATION_ON_ACTUAL_TRANSACTION" />
		</bean>
	
 	<!-- ******************************************************************** -->
	<!-- Setup a data source -->
	<!-- ******************************************************************** -->

				<!-- Using Apache DBCP Data Sources -->
				<bean name="tsws4s_4DS" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" >
					<property name="driverClassName" value="${tsws4s_4.connection.driver_class}" />
					<property name="username" value="${tsws4s_4.connection.username}" />
					<property name="password" value="${tsws4s_4.connection.password}" />
					<property name="url" value="${tsws4s_4.connection.url}" />
					<property name="maxIdle" value="${tsws4s_4.minPoolSize}" />
					<property name="maxActive" value="${tsws4s_4.maxPoolSize}" />
				</bean>

	<!-- ******************************************************************** -->
	<!-- Setup each persistence unit -->
	<!-- ******************************************************************** -->

				<!-- Configure a JPA vendor adapter -->
				<bean id="tsws4s_4JPAVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
					<property name="showSql" value="${tsws4s_4.show_sql}" />
					<property name="generateDdl" value="${tsws4s_4.generateDdl}" />
					<property name="databasePlatform" value="${tsws4s_4.dialect}" />
				</bean>
				
				<!-- EntityManager Factory that brings together the persistence unit, datasource, and JPA Vendor -->
				<bean id="tsws4s_4" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
					<property name="dataSource" ref="tsws4s_4DS" />
					<property name="persistenceUnitName" value="tsws4s_4" />
					<property name="jpaVendorAdapter" ref="tsws4s_4JPAVendorAdapter" />
						<property name="jpaPropertyMap">
							<map>
								<entry key="hibernate.transaction.manager_lookup_class" value="com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup" />
								<entry key="hibernate.connection.release_mode" value="on_close" />
							</map>
						</property>
				</bean>

</beans>
