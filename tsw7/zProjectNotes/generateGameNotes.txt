generatedGamesPairings.txt


League Scheduler

	Number of Teams
	  name="numTeams" 3-12
 
	Number of Games per Team
	  name="numTmGames" 4-12
      
	Games per Date
	  name="numGamesDt" 1-6

    Generate (SchedulePairings.php)
    
------------------------------- Schedule Games: Team Pairings -----------------------
		include("Pairing3.php");
		include("PrintGames.php");
		$numTeams = $_POST["numTeams"];
		$numTmGames = $_POST["numTmGames"];
		$numGamesDt = $_POST["numGamesDt"]; ?>

              <p>Number of Teams: <?php echo $numTeams; ?><br />
                Number of Games per Team: <?php echo $numTmGames; ?><br />
                Games per Date: <?php echo $numGamesDt; ?></p>

-----------------------(SchedulePairings.php)-------------------------------
		
		$rr1=generateRoundRobinPairings($numTeams, 'Home', 'Visitor');
		$ts = 1;
		$rnd = 1;
		$totGames=(($numTmGames*$numTeams)/2);

	//change this to loop...
	printGames($rr1, $numTeams, $rnd, $totGames, $ts, 'Home', 'Visitor', $matches);
   	if($ts>$totGames){
		//
   	} else {
		printGames($rr1, $numTeams, $rnd, $totGames, $ts, 'Home', 'Visitor', $matches);
		   if($ts>$totGames){
		   } else {
				printGames($rr1, $numTeams, $rnd, $totGames, $ts, 'Home', 'Visitor', $matches);
		   }
		      if($ts>$totGames){
		       } else {
		   		printGames($rr1, $numTeams, $rnd, $totGames, $ts, 'Home', 'Visitor', $matches);
		      }
		      if($ts>$totGames){
		       } else {
		   		printGames($rr1, $numTeams, $rnd, $totGames, $ts, 'Home', 'Visitor', $matches);
		      }
		      if($ts>$totGames){
		      } else {
		   		printGames($rr1, $numTeams, $rnd, $totGames, $ts, 'Home', 'Visitor', $matches);
		      }
   	}
------------------("PrintGames.php")-------------------------------

function printGames($rounds, $num_teams, &$rnd, &$totGames, &$ts, $pair1, $pair2, &$matches) {
    // Do we have games?
echo "<table border=0>";
 foreach($rounds as $round){
   if($ts>$totGames){
   	break;
   	} else {
   echo "<tr><td width=80>Round ".$rnd++."</td>";
   foreach($round as $games){
   		if($ts>$totGames){
   			break;
   		}
   			if(($num_teams % 2)==1 &&
   			($games[$pair1]>$num_teams || $games[$pair2]>$num_teams)){
   			// bye
   			} else {

   				echo "<td align='center' width= '120'>[".$ts."] ";
   				echo $games[$pair1]." vs ".$games[$pair2]."</td>";

   				$tm1 = $games[$pair1];
   				$tm2 = $games[$pair2];
   				if($tm1>$tm2){ $tm3=$tm1; $tm1=$tm2; $tm2=$tm3; }
   				$matches[$tm1."v".$tm2]++;
   			 $ts++;
   			}
   	}
   }
   echo "</tr>";
 }
echo "</table>";
return;
}
------------------("Pairing3.php")--------------------------------------
function generateRoundRobinPairings($num_teams, $first_team='Home', $second_team='Visitor') {
    // Do we have a positive number of players? If not, default to 4.
    $num_teams = ($num_teams > 0) ? (int)$num_teams : 4;
    // If necessary, round up number of players to nearest even number.
    $num_teams += $num_teams % 2;
    // Format for pretty alignment of pairings across rounds.
    $format = "%0" . ceil(log10($num_teams)) . "d";
    $pairing = "$format-$format ";
    $games = array();
    // Generate the pairings for each round.
    for ($round = 1; $round < $num_teams; $round++) {
        $players_done = array();
        // Pair each player except the last.
        for ($player = 1; $player < $num_teams; $player++) {
            if (!in_array($player, $players_done)) {
                // Select opponent.
                $opponent = $round - $player;
                $opponent += ($opponent < 0) ? $num_teams : 1;
                // Ensure opponent is not the current player.
                if ($opponent != $player) {       // Choose colours.
                    if (($player + $opponent) % 2 == 0 xor $player < $opponent) {
                        // Player plays white.
                      $games[$round][$player][$first_team] = $player;
                      $games[$round][$player][$second_team] = $opponent;
                    } else {           // Player plays black.
                      $games[$round][$player][$first_team] = $opponent;
                      $games[$round][$player][$second_team] = $player;                    }
                    // This pair of players are done for this round.
                    $players_done[] = $player;
                    $players_done[] = $opponent;
                }            }        }
        // Pair the last player.
        if ($round % 2 == 0) {
          $opponent = ($round + $num_teams) / 2;
          // Last player plays white.
          $games[$round][$player][$first_team] = $num_teams;
          $games[$round][$player][$second_team] = $opponent;
        } else {
          $opponent = ($round + 1) / 2;
          // Last player plays black.
          $games[$round][$player][$first_team] = $opponent;
          $games[$round][$player][$second_team] = $num_teams;
        }    }
    return $games;
}
